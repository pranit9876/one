package swin;

import java.awt.*;    
import java.awt.event.*;    
// class which inherits Frame class and implements KeyListener interface  
public class awt1 extends Frame implements KeyListener {    
// creating object of Label class   and TextArea class  
 Label l;    
    TextArea area;    
// class constructor  
    awt1() {    
          // creating the label  
        l = new Label();    
// setting the location of the label in frame  
        l.setBounds (20, 50, 100, 20);    
// creating the text area  
        area = new TextArea();    
// setting the location of text area   
        area.setBounds (20, 80, 300, 300);    
// adding the KeyListener to the text area  
        area.addKeyListener(this);  
// adding the label and text area to the frame  
        add(l);  
add(area);    
// setting the size, layout and visibility of frame  
        setSize (400, 400);    
        setLayout (null);    
        setVisible (true);    
    }    
// overriding the keyPressed() method of KeyListener interface where we set the text of the label when key is pressed  
    public void keyPressed (KeyEvent e) {    
        l.setText ("Key Pressed");    
    }    
// overriding the keyReleased() method of KeyListener interface where we set the text of the label when key is released  
    public void keyReleased (KeyEvent e) {    
        l.setText ("Key Released");    
    }    
// overriding the keyTyped() method of KeyListener interface where we set the text of the label when a key is typed  
    public void keyTyped (KeyEvent e) {    
        l.setText ("Key Typed");    
    }    
  // main method  
    public static void main(String[] args) {    
        new awt1();    
    }    
}











package swin;

import java.awt.*;  
import java.awt.event.*;  
public class awt2 extends Frame implements MouseListener{  
    awt2(){  
        addMouseListener(this);  
          
        setSize(300,300);  
        setLayout(null);  
        setVisible(true);  
    }  
    public void mouseClicked(MouseEvent e) {  
        Graphics g=getGraphics();  
        g.setColor(Color.BLUE);  
        g.fillOval(e.getX(),e.getY(),30,30);  
    }  
    public void mouseEntered(MouseEvent e) {}  
    public void mouseExited(MouseEvent e) {}  
    public void mousePressed(MouseEvent e) {}  
    public void mouseReleased(MouseEvent e) {}  
      
public static void main(String[] args) {  
    new awt2();  
}  
}
















package swin;

import java.applet.*;
import java.awt.*;
public class awt3 extends Applet
{
    //Function to initialize the applet
    public void init()
    {
	setBackground(Color.white);
    }
    //Function to draw and fill shapes
    public void paint(Graphics g)
    {
	//Draw a square
	g.setColor(Color.black);
	g.drawString("Square",75,200);
	int x[]={50,150,150,50};
	int y[]={50,50,150,150};
	g.drawPolygon(x,y,4);
	g.setColor(Color.yellow);
	g.fillPolygon(x,y,4);
	//Draw a pentagon
	g.setColor(Color.black);
	g.drawString("Pentagon",225,200);
	x=new int[]{200,250,300,300,250,200};
	y=new int[]{100,50,100,150,150,100};
	g.drawPolygon(x,y,6);
	g.setColor(Color.yellow);
	g.fillPolygon(x,y,6);
	//Draw a circle
	g.setColor(Color.black);
	g.drawString("Circle",400,200);
	g.drawOval(350,50,125,125);
	g.setColor(Color.yellow);
	g.fillOval(350,50,125,125);	
	//Draw an oval
	g.setColor(Color.black);
	g.drawString("Oval",100,380);
	g.drawOval(50,250,150,100);
	g.setColor(Color.yellow);
	g.fillOval(50,250,150,100);	
	//Draw a rectangle
	g.setColor(Color.black);
	g.drawString("Rectangle",300,380);
	x=new int[]{250,450,450,250};
	y=new int[]{250,250,350,350};
	g.drawPolygon(x,y,4);
	g.setColor(Color.yellow);
	g.fillPolygon(x,y,4);
	//Draw a triangle
	g.setColor(Color.black);
	g.drawString("Traingle",100,525);
	x=new int[]{50,50,200};
	y=new int[]{500,400,500};
	g.drawPolygon(x,y,3);
	g.setColor(Color.yellow);
	g.fillPolygon(x,y,3);
    }
}


















package swin;

//Java program to create a simple calculator
//with basic +, -, /, * using java swing elements

import java.awt.event.*;
import javax.swing.*;
import java.awt.*;
class guicalci4 extends JFrame implements ActionListener {
	// create a frame
	static JFrame f;

	// create a textfield
	static JTextField l;

	// store operator and operands
	String s0, s1, s2;

	// default constructor
	guicalci4()
	{
		s0 = s1 = s2 = "";
	}

	// main function
	public static void main(String args[])
	{
		// create a frame
		f = new JFrame("calculator");

		try {
			// set look and feel
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		}
		catch (Exception e) {
			System.err.println(e.getMessage());
		}

		// create a object of class
		guicalci4 c = new guicalci4();

		// create a textfield
		l = new JTextField(16);

		// set the textfield to non editable
		l.setEditable(false);

		// create number buttons and some operators
		JButton b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, ba, bs, bd, bm, be, beq, beq1;

		// create number buttons
		b0 = new JButton("0");
		b1 = new JButton("1");
		b2 = new JButton("2");
		b3 = new JButton("3");
		b4 = new JButton("4");
		b5 = new JButton("5");
		b6 = new JButton("6");
		b7 = new JButton("7");
		b8 = new JButton("8");
		b9 = new JButton("9");

		// equals button
		beq1 = new JButton("=");

		// create operator buttons
		ba = new JButton("+");
		bs = new JButton("-");
		bd = new JButton("/");
		bm = new JButton("*");
		beq = new JButton("C");

		// create . button
		be = new JButton(".");

		// create a panel
		JPanel p = new JPanel();

		// add action listeners
		bm.addActionListener(c);
		bd.addActionListener(c);
		bs.addActionListener(c);
		ba.addActionListener(c);
		b9.addActionListener(c);
		b8.addActionListener(c);
		b7.addActionListener(c);
		b6.addActionListener(c);
		b5.addActionListener(c);
		b4.addActionListener(c);
		b3.addActionListener(c);
		b2.addActionListener(c);
		b1.addActionListener(c);
		b0.addActionListener(c);
		be.addActionListener(c);
		beq.addActionListener(c);
		beq1.addActionListener(c);

		// add elements to panel
		p.add(l);
		p.add(ba);
		p.add(b1);
		p.add(b2);
		p.add(b3);
		p.add(bs);
		p.add(b4);
		p.add(b5);
		p.add(b6);
		p.add(bm);
		p.add(b7);
		p.add(b8);
		p.add(b9);
		p.add(bd);
		p.add(be);
		p.add(b0);
		p.add(beq);
		p.add(beq1);

		// set Background of panel
		p.setBackground(Color.blue);

		// add panel to frame
		f.add(p);

		f.setSize(200, 220);
		f.show();
	}
	public void actionPerformed(ActionEvent e)
	{
		String s = e.getActionCommand();

		// if the value is a number
		if ((s.charAt(0) >= '0' && s.charAt(0) <= '9') || s.charAt(0) == '.') {
			// if operand is present then add to second no
			if (!s1.equals(""))
				s2 = s2 + s;
			else
				s0 = s0 + s;

			// set the value of text
			l.setText(s0 + s1 + s2);
		}
		else if (s.charAt(0) == 'C') {
			// clear the one letter
			s0 = s1 = s2 = "";

			// set the value of text
			l.setText(s0 + s1 + s2);
		}
		else if (s.charAt(0) == '=') {

			double te;

			// store the value in 1st
			if (s1.equals("+"))
				te = (Double.parseDouble(s0) + Double.parseDouble(s2));
			else if (s1.equals("-"))
				te = (Double.parseDouble(s0) - Double.parseDouble(s2));
			else if (s1.equals("/"))
				te = (Double.parseDouble(s0) / Double.parseDouble(s2));
			else
				te = (Double.parseDouble(s0) * Double.parseDouble(s2));

			// set the value of text
			l.setText(s0 + s1 + s2 + "=" + te);

			// convert it to string
			s0 = Double.toString(te);

			s1 = s2 = "";
		}
		else {
			// if there was no operand
			if (s1.equals("") || s2.equals(""))
				s1 = s;
			// else evaluate
			else {
				double te;

				// store the value in 1st
				if (s1.equals("+"))
					te = (Double.parseDouble(s0) + Double.parseDouble(s2));
				else if (s1.equals("-"))
					te = (Double.parseDouble(s0) - Double.parseDouble(s2));
				else if (s1.equals("/"))
					te = (Double.parseDouble(s0) / Double.parseDouble(s2));
				else
					te = (Double.parseDouble(s0) * Double.parseDouble(s2));

				// convert it to string
				s0 = Double.toString(te);

				// place the operator
				s1 = s;

				// make the operand blank
				s2 = "";
			}

			// set the value of text
			l.setText(s0 + s1 + s2);
		}
	}
}




























package swin;

import java.awt.*; // Using AWT's containers and components
import java.awt.event.*; // Using AWT's event classes and listener interfaces

// An AWT GUI program inherits the top-level container java.awt.Frame
public class guicounter5 extends Frame implements ActionListener {
private Label lblCount; // Declare component Label
private TextField tfCount; // Declare component TextField
private Button btnCount; // Declare component Button
private int count = 0; // counter's value

// Constructor to setup UI components and event handlers
public guicounter5 () {
setLayout(new FlowLayout());
// "super" Frame sets layout to FlowLayout, which arranges
// Components from left-to-right, then top-to-bottom.

lblCount = new Label("Counter"); // Construct component Label
add(lblCount); // "super" Frame adds Label

tfCount = new TextField(count + "", 10); // Construct component TextField
tfCount.setEditable(false); // read-only
add(tfCount); // "super" Frame adds TextField

btnCount = new Button("Count"); // Construct component Button
add(btnCount); // "super" Frame adds Button
btnCount.addActionListener(this);
// btnCount is the source object that fires ActionEvent when clicked.
// The source add "this" instance as an ActionEvent listener, which provides
// an ActionEvent handler called actionPerformed().
// Clicking btnCount invokes actionPerformed().

setSize(250, 100); // "super" Frame sets initial size
setTitle("AWT Counter"); // "super" Frame sets title
setVisible(true); // show "super" Frame
}

// ActionEvent handler - Called back when the button is clicked.
@Override
public void actionPerformed(ActionEvent evt) {
++count; // Incrase the counter value
tfCount.setText(count + ""); // Display on the TextField
// setText() takes a String
}

// The entry main() method
public static void main(String[] args) {
// Invoke the constructor by allocating an anonymous instance
new guicounter5();
}
}
























package swin;

import java.awt.*;        // Using AWT container and component classes
import java.awt.event.*;  // Using AWT event classes and listener interfaces

// An AWT GUI program inherits (customized) from the top-level container
//   java.awt.Frame
public class awt6 extends Frame {
   //private Label lblInput;   // Declare input Label (to use anonymous)
   //private Label lblOutput;  // Declare output Label (to use anonymous)
   private TextField tfInput;  // Declare input TextField
   private TextField tfOutput; // Declare output TextField
   private int sum = 0;        // Accumulated sum, init to 0

   // Constructor to setup the GUI components and event handlers
   public awt6() {
      setLayout(new GridLayout(2, 2));
         // "super" Frame (Container) sets layout to GridLayout of 2 rows 2 columns.

      add(new Label("Enter an Integer: "));  // "super" Frame adds an anonymous Label

      tfInput = new TextField(10); // Construct TextField
      add(tfInput);                // "super" Frame adds TextField

      tfInput.addActionListener(new TFInputListener());
         // "tfInput" is the source object that fires an ActionEvent upon entered.
         // The source add an anonymous instance of TFInputListener as an ActionEvent
         //   listener, which provides an ActionEvent handler called actionPerformed().
         // Hitting "enter" on tfInput invokes actionPerformed().

      add(new Label("The Accumulated Sum is: "));  // "super" Frame adds an anonymous Label

      tfOutput = new TextField(10); // allocate TextField
      tfOutput.setEditable(false);  // read-only
      add(tfOutput);                // "super" Frame adds TextField

      setTitle("AWT Accumulator");  // "super" Frame sets title
      setSize(350, 120);  // "super" Frame sets initial window size
      setVisible(true);   // "super" Frame shows
   }

   // The entry main() method
   public static void main(String[] args) {
      // Invoke the constructor to setup the GUI, by allocating an anonymous instance
      new awt6();
   }

   // Define an inner class to handle the input TextField.
   // An ActionEvent listener must implement ActionListener interface.
   private class TFInputListener implements ActionListener {
      // ActionEvent handler - Called back upon hitting "enter" key on TextField
      @Override
      public void actionPerformed(ActionEvent evt) {
         // Get the String entered into the TextField tfInput, convert to int
         int numberIn = Integer.parseInt(tfInput.getText());
         sum += numberIn;      // Accumulate numbers entered into sum
         tfInput.setText("");  // Clear input TextField
         tfOutput.setText(sum + ""); // Display sum on the output TextField
                                     // convert int to String
      }
   }
}















package swin;

import javax.swing.*;  
import java.awt.event.*;  
public class addtextfild7 implements ActionListener{  
    JTextField tf1,tf2,tf3;  
    JButton b1;  
    addtextfild7(){  
        JFrame f= new JFrame();  
        tf1=new JTextField();  
        tf1.setBounds(50,50,150,20);  
        tf2=new JTextField();  
        tf2.setBounds(50,100,150,20);  
        tf3=new JTextField();  
        tf3.setBounds(50,150,150,20);  
        tf3.setEditable(false);   
        b1=new JButton("=");  
        b1.setBounds(50,200,50,50);    
        b1.addActionListener(this);  
        f.add(tf1);f.add(tf2);f.add(tf3);f.add(b1);  
        f.setSize(300,300);  
        f.setLayout(null);  
        f.setVisible(true);  
    }         
    public void actionPerformed(ActionEvent e) {  
        String s1=tf1.getText();  
        String s2=tf2.getText();  
        int a=Integer.parseInt(s1);  
        int b=Integer.parseInt(s2);  
        int c=0;  
        if(e.getSource()==b1){  
            c=a+b;  
        }
        String result=String.valueOf(c);  
        tf3.setText(result);  
    }  
public static void main(String[] args) {  
    new addtextfild7();  
} }  





















package swin;

//Java program to convert from
//rupee to the dollar and vice-versa
//using Java Swing

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
public class currency8 {

 // Function to convert from rupee
 // to the dollar and vice-versa
 // using Java Swing
 public static void converter()
 {

     // Creating a new frame using JFrame
     JFrame f = new JFrame("CONVERTER");

     // Creating two labels
     JLabel l1, l2;

     // Creating two text fields.
     // One for rupee and one for
     // the dollar
     JTextField t1, t2;

     // Creating three buttons
     JButton b1, b2, b3;

     // Naming the labels and setting
     // the bounds for the labels
     l1 = new JLabel("Rupees:");
     l1.setBounds(20, 40, 60, 30);
     l2 = new JLabel("Dollars:");
     l2.setBounds(170, 40, 60, 30);

     // Initializing the text fields with
     // 0 by default and setting the
     // bounds for the text fields
     t1 = new JTextField("0");
     t1.setBounds(80, 40, 50, 30);
     t2 = new JTextField("0");
     t2.setBounds(240, 40, 50, 30);

     // Creating a button for INR,
     // one button for the dollar
     // and one button to close
     // and setting the bounds
     b1 = new JButton("INR");
     b1.setBounds(50, 80, 60, 15);
     b2 = new JButton("Dollar");
     b2.setBounds(190, 80, 60, 15);
     b3 = new JButton("close");
     b3.setBounds(150, 150, 60, 30);

     // Adding action listener
     b1.addActionListener(new ActionListener() {
         public void actionPerformed(ActionEvent e)
         {
             // Converting to double
             double d
                 = Double.parseDouble(t1.getText());

             // Converting rupees to dollars
             double d1 = (d / 65.25);

             // Getting the string value of the
             // calculated value
             String str1 = String.valueOf(d1);

             // Placing it in the text box
             t2.setText(str1);
         }
     });

     // Adding action listener
     b2.addActionListener(new ActionListener() {
         public void actionPerformed(ActionEvent e)
         {
             // Converting to double
             double d2
                 = Double.parseDouble(t2.getText());

             // converting Dollars to rupees
             double d3 = (d2 * 65.25);

             // Getting the string value of the
             // calculated value
             String str2 = String.valueOf(d3);

             // Placing it in the text box
             t1.setText(str2);
         }
     });

     // Action listener to close the form
     b3.addActionListener(new ActionListener() {
         public void actionPerformed(ActionEvent e)
         {
             f.dispose();
         }
     });

     // Default method for closing the frame
     f.addWindowListener(new WindowAdapter() {
         public void windowClosing(WindowEvent e)
         {
             System.exit(0);
         }
     });

     // Adding the created objects
     // to the form
     f.add(l1);
     f.add(t1);
     f.add(l2);
     f.add(t2);
     f.add(b1);
     f.add(b2);
     f.add(b3);

     f.setLayout(null);
     f.setSize(400, 300);
     f.setVisible(true);
 }

 // Driver code
 public static void main(String args[])
 {
     converter();
 }
}


























package swin;

//Java program to implement a GUI
//application for the student
//management system

import javax.swing.*;
import java.awt.*;
import java.awt.Image;
import java.awt.event.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.print.*;
import javafx.print.Printer;
import java.io.*;
import java.io.IOException;

//Creating the fee class
public class marks9 extends Frame {

	JLabel l1, l2, l3, l4,
		l5, l6, l7, l8,
		l9, l10, l12, l13,
		l14, l11, l15;

	JTextField tf1, tf2, tf3,
		tf4, tf5, tf6,
		tf7, tf8, tf9,
		tf10;

	JTextArea area2, area1;

	JRadioButton rb1, rb2, rb3,
		rb4, rb5, rb6,
		rb7;

	JFileChooser f1;

	// Default constructor to
	// initialize the parameters
	marks9()
	{

		l1 = new JLabel("Fee Report");
		l1.setBounds(550, 100, 250, 20);

		l2 = new JLabel(
			"Name of the Student:");
		l2.setBounds(50, 150, 250, 20);

		tf1 = new JTextField();
		tf1.setBounds(250, 150, 250, 20);

		l3 = new JLabel(
			"Name of the Father:");
		l3.setBounds(50, 200, 250, 20);

		tf2 = new JTextField();
		tf2.setBounds(250, 200, 250, 20);

		l4 = new JLabel("Roll Number:");
		l4.setBounds(50, 250, 250, 20);

		tf3 = new JTextField();
		tf3.setBounds(250, 250, 250, 20);

		l5 = new JLabel("Email ID:");
		l5.setBounds(50, 300, 250, 20);

		tf4 = new JTextField();
		tf4.setBounds(250, 300, 250, 20);

		l6 = new JLabel("Contact Number:");
		l6.setBounds(50, 350, 250, 20);

		tf5 = new JTextField();
		tf5.setBounds(250, 350, 250, 20);

		l7 = new JLabel("Address:");
		l7.setBounds(50, 400, 250, 20);

		area1 = new JTextArea();
		area1.setBounds(250, 400, 250, 90);

		l9 = new JLabel("Gender:");
		l9.setBounds(50, 500, 250, 20);

		JRadioButton r5
			= new JRadioButton(" Male");
		JRadioButton r6
			= new JRadioButton(" Female");

		r5.setBounds(250, 500, 100, 30);
		r6.setBounds(350, 500, 100, 30);

		ButtonGroup bg = new ButtonGroup();
		bg.add(r5);
		bg.add(r6);

		l10 = new JLabel("Nationality:");
		l10.setBounds(50, 550, 250, 20);

		tf6 = new JTextField();
		tf6.setBounds(250, 550, 250, 20);

		l11 = new JLabel(
			"Year of passing 10th");
		l11.setBounds(50, 600, 250, 20);

		String language[]
			= { "2016", "2015", "2014" };

		final JComboBox cb1
			= new JComboBox(language);

		cb1.setBounds(250, 600, 90, 20);

		l12 = new JLabel(
			"Year of passing 12th");
		l12.setBounds(50, 650, 250, 20);

		String languagess[]
			= { "2019", "2018", "2017" };

		l13 = new JLabel(
			"Points Secured in 10th:");
		l13.setBounds(50, 700, 250, 20);

		tf7 = new JTextField();
		tf7.setBounds(250, 700, 250, 20);

		l14 = new JLabel("Percentage in 12th:");
		l14.setBounds(50, 750, 250, 20);

		tf8 = new JTextField();
		tf8.setBounds(250, 750, 250, 20);

		ImageIcon i2 = new ImageIcon("2.png");
		JLabel l15
			= new JLabel("", i2, JLabel.CENTER);

		l15.setBounds(900, 50, 600, 200);

		final JComboBox cb2
			= new JComboBox(languagess);

		cb2.setBounds(250, 650, 90, 20);
		l8 = new JLabel(
			"Groups Offered here are:");
		l8.setBounds(800, 150, 250, 20);

		rb1 = new JRadioButton("SEAS");
		rb1.setBounds(550, 150, 100, 30);

		rb2 = new JRadioButton("SLABS");
		rb2.setBounds(650, 150, 100, 30);

		ButtonGroup bg1 = new ButtonGroup();

		bg1.add(rb1);
		bg1.add(rb2);

		rb3 = new JRadioButton("HOSTELLER");
		rb3.setBounds(550, 200, 100, 30);

		rb4 = new JRadioButton("DAY SCHOLAR");
		rb4.setBounds(650, 200, 120, 30);

		ButtonGroup bg2 = new ButtonGroup();
		bg2.add(rb3);
		bg2.add(rb4);

		String languages[]
			= { "CSE", "ECE", "EEE",
				"CIVIL", "MECH" };
		final JComboBox cb
			= new JComboBox(languages);
		cb.setBounds(800, 200, 90, 20);

		final JLabel label
			= new JLabel();
		label.setBounds(600, 430, 500, 30);
		JButton b = new JButton("Show");
		b.setBounds(1000, 300, 80, 30);

		final DefaultListModel<String> li1
			= new DefaultListModel<>();

		li1.addElement("CSE(2, 50, 000)");
		li1.addElement("ECE(2, 50, 000)");
		li1.addElement("EEE(2, 50, 000)");
		li1.addElement("MECH(2, 50, 000)");
		li1.addElement("CIVIL(2, 50, 000)");

		final JList<String> list1
			= new JList<>(li1);

		list1.setBounds(600, 300, 125, 125);

		DefaultListModel<String> li2
			= new DefaultListModel<>();

		li2.addElement(
			"2 SHARE(1, 50, 000)");
		li2.addElement(
			"3 SHARE(1, 40, 000)");
		li2.addElement(
			"5 SHARE(1, 20, 000)");
		li2.addElement(
			"8 SHARE(1, 10, 000)");
		li2.addElement(
			"bus(40, 000)");

		final JList<String> list2
			= new JList<>(li2);
		list2.setBounds(
			800, 300, 125, 125);

		JButton Receipt
			= new JButton("Generate Receipt");
		Receipt.setBounds(600, 490, 150, 30);
		JButton b2 = new JButton("Reset");
		b2.setBounds(750, 490, 150, 30);
		JButton Print = new JButton("Print");
		Print.setBounds(900, 490, 150, 30);

		area2 = new JTextArea();
		area2.setBounds(600, 540, 450, 240);

		add(l1);
		add(l2);
		add(l3);
		add(l4);
		add(l5);
		add(l6);
		add(l7);
		add(l8);
		add(l9);
		add(l10);
		add(l11);
		add(l12);
		add(l13);
		add(l14);
		add(tf1);
		add(tf2);
		add(tf3);
		add(tf4);
		add(tf5);
		add(tf6);
		add(tf7);
		add(tf8);
		add(area1);
		add(area2);
		add(l15);
		add(rb1);
		add(rb2);
		add(rb3);
		add(rb4);
		add(r5);
		add(r6);
		add(cb);
		add(cb1);
		add(cb2);
		add(list1);
		add(list2);
		add(b);
		add(label);
		add(Receipt);
		add(b2);
		add(Print);

		b.addActionListener(new ActionListener() {

			// Method to display the data
			// entered in the text fields
			public void actionPerformed(ActionEvent e)
			{
				String data = "";
				if (list1.getSelectedIndex() != -1) {
					data = "You had selected the Group:"
						+ list1.getSelectedValue();
					label.setText(data);
				}
				if (list2.getSelectedIndex() != -1) {
					data += " and Hostel with the "
							+ "facility of: ";

					for (Object frame :
						list2.getSelectedValues()) {
						data += frame + " ";
					}
				}
				label.setText(data);
			}
		});

		// Reset the text fields
		b2.addActionListener(
			new ActionListener() {
				public void actionPerformed(
					ActionEvent e)
				{
					area2.setText("");
					area1.setText(" ");
					tf1.setText("");
					tf2.setText("");
					tf3.setText("");
					tf4.setText("");
					tf5.setText("");
					tf6.setText(" ");
				}
			});

		// Implementing the Print action
		Print.addActionListener(
			new ActionListener() {
				public void actionPerformed(
					ActionEvent e)
				{
					try {
						area2.print();
					}
					catch (java.awt.print
							.PrinterException a) {
						System.err.format(
							"NoPrinter Found",
							a.getMessage());
					}
				}
			});

		// Generating the receipt
		Receipt.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e)
			{

				area2.setText(
					"--------------------------------"
					+ "-----------FEE RECEIPT----"
					+ "--------------------------"
					+ "--------------------------"
					+ "-------------------\n");

				area2.setText(area2.getText()
							+ "Student Name: "
							+ tf1.getText()
							+ "\n");
				area2.setText(area2.getText()
							+ "Father's Name: "
							+ tf2.getText()
							+ "\n");
				area2.setText(area2.getText()
							+ "RollNumber: "
							+ tf3.getText()
							+ "\n");
				area2.setText(area2.getText()
							+ "Email ID: "
							+ tf4.getText()
							+ "\n");
				area2.setText(area2.getText()
							+ "Contact Number: "
							+ tf5.getText()
							+ "\n");
				area2.setText(area2.getText()
							+ "Wants to take: "
							+ cb.getSelectedItem()
									.toString()
							+ "\n");

				if (rb1.isSelected()) {
					area2.setText(area2.getText()
								+ "Wants to Join in "
								+ "School of Engineering "
								+ "and Applied Sciences\n");
				}
				if (rb2.isSelected()) {
					area2.setText(area2.getText()
								+ "Wants to Join in "
								+ "School of Liberal "
								+ "Arts and Sciences\n");
				}
				if (rb3.isSelected()) {
					area2.setText(area2.getText()
								+ "Wants to be a "
								+ "Hosteller \n");
				}
				if (rb4.isSelected()) {
					area2.setText(area2.getText()
								+ "Wants to be a "
								+ "Day Scholar \n");
				}
				area2.setText(area2.getText()
							+ "Had chosen: "
							+ list1.getSelectedValue()
									.toString()
							+ "\n");
				area2.setText(area2.getText()
							+ "Had chosen: "
							+ list2.getSelectedValue()
									.toString()
							+ "\n");

				int index2 = list2.getSelectedIndex();
				if (index2 == 0) {
					area2.setText(area2.getText()
								+ "				 "
								+ "Total amount to be "
								+ "paid is 4 Lakhs \n");
				}

				if (index2 == 1) {
					area2.setText(area2.getText()
								+ "				 "
								+ "Total amount to be paid "
								+ "is 3.9 Lakhs \n");
				}

				if (index2 == 2) {
					area2.setText(area2.getText()
								+ "				 "
								+ "Total amount to be paid "
								+ "is 3.8 Lakhs \n");
				}

				if (index2 == 3) {
					area2.setText(area2.getText()
								+ "				 "
								+ "Total amount to be paid "
								+ "is 3.7 Lakhs \n");
				}

				if (index2 == 4) {
					area2.setText(area2.getText()
								+ "				 "
								+ "Total amount to be paid "
								+ "is 2.9 Lakhs \n");
				}

				if (e.getSource() == Receipt) {
					try {
						FileWriter fw
							= new FileWriter(
								"java.txt", true);
						fw.write(area2.getText());
						fw.close();
					}
					catch (Exception ae) {
						System.out.println(ae);
					}
				}

				JOptionPane.showMessageDialog(
					area2, "DATA SAVED SUCCESSFULLY");
			};
		});
		addWindowListener(
			new WindowAdapter() {
				public void windowClosing(
					WindowEvent we)
				{
					System.exit(0);
				}
			});
		setSize(800, 800);
		setLayout(null);
		setVisible(true);
		setBackground(Color.cyan);
	}
	public static void main(String[] args)
	{
		new marks9();
	}
}






















*****************************************************************11******************************************************
package swin;

class palindrome11{  
	 public static void main(String args[]){  
	  int r,sum=0,temp;    
	  int n=0;//It is the number variable to be checked for palindrome  
	  
	  temp=n;    
	  while(n>0){    
	   r=n%10;  //getting remainder  
	   sum=(sum*10)+r;    
	   n=n/10;    
	  }    
	  if(temp==sum)    
	   System.out.println("palindrome number ");    
	  else    
	   System.out.println("not palindrome");    
	}  
	}  














